--- !ruby/object:Api::Resource
# API resource name
name: 'storagePool'
# Resource description for the provider documentation.
description: |
  StoragePool is a container for volumes with a service level and capacity.Volumes can be created in a pool of sufficient available capacity. StoragePool capacity is what you are billed for.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'QUICKSTART_TITLE': 'https://cloud.google.com/netapp/volumes/docs/reference/rest/v1/projects.locations.storagePools'
  # Link to the REST API reference for the resource. For example,
  api: 'https://cloud.google.com/netapp/volumes/docs/reference/rest/v1/projects.locations.storagePools'
# Marks the resource as beta-only. Ensure a beta version block is present in
# provider.yaml.
# min_version: beta

# Inserts styled markdown into the header of the resource's page in the
# provider documentation.
# docs: !ruby/object:Provider::Terraform::Docs
#   warning: |
#     MULTILINE_WARNING_MARKDOWN
#   note: |
#     MULTILINE_NOTE_MARKDOWN

# URL for the resource's standard List method. https://google.aip.dev/132
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
base_url: projects/{{project}}/locations/{{location}}/storagePools
# URL for the resource's standard Get method. https://google.aip.dev/131
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
self_link: projects/{{project}}/locations/{{location}}/storagePools/{{storage_pool_id}}

# If true, the resource and all its fields are considered immutable - that is,
# only creatable, not updatable. Individual fields can override this if they
# have a custom update method in the API.
# immutable: true

# Overrides one or more timeouts, in minutes. All timeouts default to 20.
# timeouts: !ruby/object:Api::Timeouts
#   insert_minutes: 20
#   update_minutes: 20
#   delete_minutes: 20

# URL for the resource's standard Create method, including query parameters.
# https://google.aip.dev/133
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
create_url: projects/{{project}}/locations/{{location}}/storagePools?storagePoolId={{storage_pool_id}}
# Overrides the HTTP verb used to create a new resource.
# Allowed values: :POST, :PUT, :PATCH. Default: :POST
create_verb: :POST

# Overrides the URL for the resource's standard Update method. (If unset, the
# self_link URL is used by default.) https://google.aip.dev/134
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
update_url: projects/{{project}}/locations/{{location}}/storagePools/{{storage_pool_id}}
# The HTTP verb used to update a resource. Allowed values: :POST, :PUT, :PATCH. Default: :PUT.
update_verb: :PATCH
# If true, the resource sets an `updateMask` query parameter listing modified
# fields when updating the resource. If false, it does not.
update_mask: true

# Overrides the URL for the resource's standard Delete method. (If unset, the
# self_link URL is used by default.) https://google.aip.dev/135
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
# delete_url: 'projects/{{project}}/locations/{{location}}/storagePools/{{name}}'
# Overrides the HTTP verb used to delete a resource.
# Allowed values: :POST, :PUT, :PATCH, :DELETE. Default: :DELETE
# delete_verb: :DELETE

# If true, code for handling long-running operations is generated along with
# the resource. If false, that code is not generated.
autogen_async: true
# Sets parameters for handling operations returned by the API.
async: !ruby/object:Api::OpAsync
  # Overrides which API calls return operations. Default: ['create',
  # 'update', 'delete']
  # actions: ['create', 'update', 'delete']
  operation: !ruby/object:Api::OpAsync::Operation
    base_url: '{{op_id}}'
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    required: true
    immutable: true
    url_param_only: true
    description: |
      LOCATION_DESCRIPTION
  - !ruby/object:Api::Type::String
    name: 'storage_pool_id'
    description:
      'The unique name of the storage pool
      `[_a-zA-Z0-9][-_.a-zA-Z0-9]*`.'
    required: true
    immutable: true
    url_param_only: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'Storage_pool_create'
    primary_resource_id: 'test_pool'
    vars:
      pool_name: 'test-pool'
properties:
  # Fields go here
  - !ruby/object:Api::Type::String
    name: name
    output: true
    description: |
      Name of the storage pool
  - !ruby/object:Api::Type::Enum
    name: 'serviceLevel'
    description: |
      Service level of the storage pool
    values:
      - :PREMIUM
      - :EXTREME
      - :STANDARD
  - !ruby/object:Api::Type::String
    name: 'capacityGib'
    description: |
      Capacity in GIB of the pool
  - !ruby/object:Api::Type::String
    name: 'volumeCapacityGib'
    description: |
      Allocated size of all volumes in GIB in the storage pool
    output: true
  - !ruby/object:Api::Type::Integer
    name: 'volumeCount'
    description: |
      Volume count of the storage pool
    output: true
  - !ruby/object:Api::Type::Enum
    name: 'State'
    description: |
      State of the storage pool
    values:
      - :STATE_UNSPECIFIED
      - :CREATING
      - :RESTORING
      - :UPDATING
      - :DELETING
      - :DISABLED
      - :READY
    output: true
  - !ruby/object:Api::Type::String
    name: 'stateDetails'
    description: |
      State details of the storage pool
    output: true
  - !ruby/object:Api::Type::String
    name: 'createTime'
    description: |
      Create time of the storage pool
    output: true
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      Description of the storage pool
  - !ruby/object:Api::Type::KeyValuePairs
    name: labels
    description: |
      Labels as key value pairs.An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  - !ruby/object:Api::Type::String
    name: 'network'
    description: |
      VPC Network name. Format: projects/{project}/global/networks/{network}
  - !ruby/object:Api::Type::String
    name: 'activeDirectory'
    description: |
      Specifies the Active Directory to be used for creating a SMB volume.
  - !ruby/object:Api::Type::String
    name: 'kmsConfig'
    description: |
      Specifies the KMS config to be used for volume encryption.
  - !ruby/object:Api::Type::Boolean
    name: 'ldapEnabled'
    description: |
      Flag indicating if the pool is NFS LDAP enabled or not.
  - !ruby/object:Api::Type::String
    name: 'psaRange'
    description: |
      Name of the Private Service Access allocated range. If not provided, any available range will be chosen.
  - !ruby/object:Api::Type::Enum
    name: 'encryptionType'
    description: |
      Specifies the current pool encryption key source.
    values:
      - :ENCRYPTION_TYPE_UNSPECIFIED
      - :SERVICE_MANAGED
      - :CLOUD_KMS
    output: true
  - !ruby/object:Api::Type::Boolean
    name: 'globalAccessAllowed'
    description: |
      Allows SO pool to access AD or DNS server from other regions.
